{"version":3,"sources":["components/habit.jsx","components/inputForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","components/reset.jsx","index.js"],"names":["Habit","memo","props","habit","name","count","className","onClick","onIncrement","onDecrement","onDelete","InputForm","formRef","React","createRef","inputRef","ref","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","handleIncrement","handleDecrement","handleDelete","addhabitFunction","habits","map","id","onReset","Navbar","class","change","App","Component","useState","setHabits","useCallback","item","filter","Date","now","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e6854a8.chunk.js","sourcesContent":["// rcc\n// 클래스 이름은 대문자로 시작\nimport React, { memo } from \"react\";\n\nconst Habit = memo((props) => {\n  const handleIncrement = () => {\n    props.onIncrement(props.habit);\n  };\n  const handleDecrement = () => {\n    props.onDecrement(props.habit);\n  };\n  const handleDelete = () => {\n    props.onDelete(props.habit);\n  };\n  const { name, count } = props.habit;\n  return (\n    <li className=\"habit\">\n      <span className=\"habit-name\">{name}</span>\n      <span className=\"habit-count\">{count}</span>\n      <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\n        <i className=\"far fa-plus-square\"></i>\n      </button>\n      <button className=\"habit-button habit-decrease\" onClick={handleDecrement}>\n        <i className=\"far fa-minus-square\"></i>\n      </button>\n      <button className=\"habit-button habit-delete\" onClick={handleDelete}>\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </li>\n  );\n});\n\nexport default Habit;\n\n// class Habit extends PureComponent {\n// javascript event와는 다른 react만의 Synthetic Event\n// handleIncrement = () => {\n//   // state 오브젝트안의 count 증가한 뒤 state 업데이트\n//   // this.state.cound++; -> 이렇게 업데이트하면 react는 몰라요\n//   // 꼭 state 변수를 업데이트 할 때에는, this.setState함수를 이용해야 한다.\n//   this.setState({ count: this.state.count + 1 });\n// };\n// handleDecrement = () => {\n//   const count = this.state.count - 1;\n//   this.setState({ count: count < 0 ? 0 : count });\n// };\n\n// LifeCycle Method\n// componentDidMount() {\n//   //컴포넌트가 UI 상에 등록이 되었을 때, 사용자에게 보여질 때 호출\n//   console.log(`${this.props.habit.name} mounted`);\n// }\n// componentWillUnmount() {\n//   //컴포넌트를 지우기 전에 호출\n//   console.log(`${this.props.habit.name} will mounted`);\n// }\n\n//   render() {}\n// }\n\n// export default Habit;\n","import React, { memo } from \"react\";\n\nconst InputForm = memo((props) => {\n  const formRef = React.createRef();\n  const inputRef = React.createRef(); //Ref 호출\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); //page reload stop\n    const name = inputRef.current.value;\n    name && props.onAdd(name);\n    formRef.current.reset(); // = this.inputRef.current.value = \"\";\n    // this.props && this.props.addhabitFunction(event.target.habit.value);\n  };\n  return (\n    <form ref={formRef} className=\"inputForm\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        // name=\"habit\"\n        ref={inputRef}\n        className=\"inputText\"\n        placeholder=\"Enter Habit\"\n      />\n      <input type=\"submit\" value=\"Add\" className=\"inputAdd\" />\n    </form>\n  );\n});\n\n// export default InputForm;\n// class InputForm extends PureComponent {\n//   render() {\n//     console.log(\"inputform\");\n//   }\n// }\n\nexport default InputForm;\n","import Habit from \"./habit\";\nimport InputForm from \"./inputForm\";\n\nimport React from \"react\";\n\nconst Habits = (props) => {\n  // state = {\n  //  habits : [\n  // {name : 'reading', count : 0},\n  // {name : 'running', count : 0},\n  // ]\n  //}\n  const handleIncrement = (habit) => {\n    props.onIncrement(habit);\n  };\n  const handleDecrement = (habit) => {\n    props.onDecrement(habit);\n  };\n  const handleDelete = (habit) => {\n    props.onDelete(habit);\n  };\n  const addhabitFunction = (name) => {\n    props.onAdd(name);\n  };\n  const handleReset = () => {\n    props.onReset();\n  };\n  return (\n    <div className=\"main\">\n      <InputForm onAdd={addhabitFunction} />\n      <ul className=\"habits\">\n        {props.habits.map((habit) => (\n          <Habit\n            key={habit.id}\n            habit={habit}\n            onIncrement={handleIncrement}\n            onDecrement={handleDecrement}\n            onDelete={handleDelete}\n            onAdd={addhabitFunction}\n          />\n        ))}\n      </ul>\n\n      <button className=\"reset\" onClick={handleReset}>\n        Reset All\n      </button>\n    </div>\n  );\n};\n\nexport default Habits;\n\n// class Habits extends Component {\n//   //react에서는 state를 직접적으로 수정하는건 좋지 않다.!!!! -> spread syntax\n\n//   render() {\n//     console.log(\"habits\");\n//   }\n// }\n\n// export default Habits;\n","import React, { memo } from \"react\";\n\nconst Navbar = memo((props) => {\n  return (\n    <header className=\"navbar\">\n      <i class=\"fas fa-leaf nav-icon\"></i>\n      <span className=\"nav nav-title\">Habit Tracker</span>\n      <span className=\"nav nav-count\">{props.change}</span>\n    </header>\n  );\n});\n\nexport default Navbar;\n","import \"./app.css\";\nimport Habits from \"./components/habits\";\nimport Navbar from \"./components/navbar\";\nimport Reset from \"./components/reset\";\n\nimport React, { useCallback, useState } from \"react\";\n\nconst App = (props) => {\n  // state = {\n  //   // 배열 사용시 고유 key가 있어야 한다. -> 이 때, index는 사용하지 말기\n  //   habits: [],\n  // };\n  const [habits, setHabits] = useState([\n    { id: 1, name: \"Reading\", count: 0 },\n    { id: 2, name: \"Running\", count: 0 },\n    { id: 3, name: \"Coding\", count: 0 },\n  ]);\n\n  const handleIncrement = useCallback((habit) => {\n    // const habits = [...this.state.habits]; //복사\n    // const index = habits.indexOf(habit);\n    // habits[index].count++;\n    // this.setState({ habits: habits });\n    // PureComponent\n    setHabits((habits) =>\n      habits.map((item) => {\n        if (item.id === habit.id) {\n          return { ...habit, count: habit.count + 1 };\n        }\n        return item;\n      })\n    );\n  }, []);\n  const handleDecrement = useCallback((habit) => {\n    // const habits = [...this.state.habits];\n    // const index = habits.indexOf(habit);\n    // const count = habits[index].count - 1;\n    // habits[index].count = count < 0 ? 0 : count;\n    // this.setState({ habits: habits });\n    setHabits((habits) =>\n      habits.map((item) => {\n        if (item.id === habit.id) {\n          const count = habit.count - 1;\n          return { ...habit, count: count < 0 ? 0 : count };\n        }\n        return item;\n      })\n    );\n  }, []);\n\n  const handleDelete = useCallback((habit) => {\n    setHabits((habits) => habits.filter((item) => item.id !== habit.id));\n  }, []);\n  const addhabitFunction = useCallback((name) => {\n    setHabits((habits) => [...habits, { id: Date.now(), name, count: 0 }]);\n  }, []);\n  const handleReset = () => {\n    setHabits((habits) =>\n      habits.map((habit) => {\n        if (habit.count > 0) {\n          return { ...habit, count: 0 };\n        }\n        return habit;\n      })\n    );\n  };\n  return (\n    <div className=\"app\">\n      <Navbar change={habits.filter((item) => item.count > 0).length} />\n      <Habits\n        habits={habits}\n        onIncrement={handleIncrement}\n        onDecrement={handleDecrement}\n        onDelete={handleDelete}\n        onAdd={addhabitFunction}\n        onReset={handleReset}\n      />\n    </div>\n  );\n};\n\nexport default App;\n\n// class App extends Component {\n//   render() {\n//     console.log(\"app\");\n//   }\n// }\n\n// export default App;\n\n// mine\n// addhabitFunction = (data) => {\n//   let index = 4;\n//   const habits = habits.concat({\n//     id: index++,\n//     name: data,\n//     count: 0,\n//   });\n//   this.setState({ habits: habits });\n// };\n// plusFunction = (data) => {\n//   if (data.count > 0 && data.count < 2) {\n//     this.state.change = this.state.change + 1;\n//     this.setState({ change: this.state.change });\n//   }\n// };\n// minusFunction = (data) => {\n//   if (data.count == 0) {\n//     this.state.change = this.state.change - 1;\n//     this.setState({ change: this.state.change < 0 ? 0 : this.state.change });\n//   }\n// };\n// deleteFunction = (datas) => {\n//   const habits = [...this.state.habits];\n//   this.state.change = this.state.change - 1;\n//   this.setState({ habits: datas });\n//   this.setState({ change: this.state.change < 0 ? 0 : this.state.change });\n// };\n// resetAllFunction = () => {\n//   const habits = [...this.state.habits];\n//   this.setState({\n//     habits: habits.map((item) =>\n//       item.count > 0 ? { ...item, count: 0 } : item\n//     ),\n//   });\n//   this.setState({ change: 0 });\n// };\n","import React, { Component } from \"react\";\n\nclass Reset extends Component {\n  resetAll = () => {\n    this.props.resetAllFunction();\n  };\n  render() {\n    return (\n      <button className=\"reset\" onClick={this.resetAll}>\n        Reset All\n      </button>\n    );\n  }\n}\n\nexport default Reset;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport SimpleHabit from \"./components/simpleHabit\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}